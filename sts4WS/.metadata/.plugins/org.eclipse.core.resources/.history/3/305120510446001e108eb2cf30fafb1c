<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
</head>
<body>
<div id="list"></div>
<div id="photo"></div>
<form action="">
    넘버: <input type="text" name="suinNum" value=""><br>
    이름: <input type="text" name="suinName" value=""><br>
    내용: <textarea name="suinContent"></textarea><br>
    파일: <input type="file" name="suinFile"><br>
    파일인풋: <input type="file" name="suinFile2"><br>
    <button id="create" type="button">생성</button>
    <button id="search" type="button">조회</button>
    <button id="modify" type="button">수정</button>
    <button id="delete" type="button">삭제</button>
    <button id="fileUp" type="button">업로드</button>
    <button id="go" type="button">전송</button>
    <button type="button" id="part">아주 가끔</button>
</form>
<script>
    const $list = $("#list");
    $(function () {
        getList();
    });

    const $part = $("#part");
    const $creBtn = $("#create");
    const $schBtn = $("#search");
    const $modBtn = $("#modify");
    const $delBtn = $("#delete");
    const $fileUp = $("#fileUp");
    const $photo = $("#photo");
    const $go = $("#go");

    const $suinNum = $("input[name=suinNum]");
    const $suinName = $("input[name=suinName]");
    const $suinContent = $("textarea[name=suinContent]");
    const $suinFile = $("input[name=suinFile]");
    const $suinFile2 = $("input[name=suinFile2]");

    $part.on("click", function(){
        //복잡한 VO와 FILE을 함께 보낼 때는
        //FILE과 VO를 분리해서 받는 방법을 가끔 사용함
        // 왜냐하면 VO문자열이 자바객체로 변경이 일부 안 되는 경우(DEPTH가 깊음)가 있음
        // 앞으로는 더 잘 될 거임
    	let formData = new FormData();
        formData.append("susuFile", $suinFile2[0].files[0]);

        let test = {
            name:"수인",
            age:"28",
            friends:["혜진", "서연", "소연"]
        }

        //복잡한 json 객체를 문자열화해서 blob로 담아서 보냄
        formData.append("test",new Blob([JSON.stringify(test)],{type:"application/json;charset=utf-8"}));

        let xhr = new XMLHttpRequest();
        xhr.open("post", "url", true);
        xhr.onreadystatechange = function(){
            if(xhr.readyState == 200 && xhr.status == 4) {
                console.log(xhr.responseText);
            }
        }
        xhr.send(formData);
    	
    });
    
    
    $go.on("click", () => {
        let formData = new FormData(document.forms[0]);
        console.log(formData);

        let xhr = new XMLHttpRequest();
        xhr.open("post", "/rest/suin", true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                let result = xhr.responseText;
                if (result == 1) {
                    alert("입력 완.");
                    getList();
                } else {
                    alert("입력실패");
                }
            }
        }
        xhr.send(formData);
    })

    $fileUp.on("click", () => {
        let formData = new FormData(); //전송방식이 무조건 multipart/formdata
        formData.append("fileTest", $testFile2[0].files[0]);

        $.ajax({
            type: 'post',
            url: '/rest/suin2',
            data: formData, //JSON.stringify 하지 않음 !
            contentType: false,    //default: application/x-www-form-urlencoded
            processData: false,     //default: application/x-www-form-urlencoded
            cache: false, //선택 권장 사항
            dataType: 'text',
            success: function (result) {
                console.log(result);

                $("<img></img>").attr("src", result).appendTo($photo);
            },
            error: function (xhr) {
                console.log("CODE: ", xhr.status)
                console.log("MESSAGE: ", xhr.responseText)
                console.log("ERROR: ", error);
            }
        });
    })

    $schBtn.on("click", function () {
        $.ajax({
            type: "get",
            url: `/rest/suin/${$suinNum.val()}`,
            dataType: "text",
            success: function (result) {
                if (result) {
                    console.log(result);
                    result = JSON.parse(result);
                    $suinName.val(result.suinName);
                    $suinContent.val(result.suinContent);
                    $suinFile.val(result.suinFile);
                } else {
                    alert("없는 번호입니다.");
                }
            },
            error: function (xhr, status, error) {
                console.log("code: " + xhr.status);
                console.log("message: " + xhr.responseText);
                console.log("error: " + xhr.error);
            },
        });
    });

    $creBtn.on("click", function () {
        let suinVO = {
            suinName: $suinName.val(),
            $suinContent: $suinContent.val(),
            $suinFile: $suinFile.val()
        };
        console.log("suinVO: ", suinVO);

        $.ajax({
            type: "post",
            url: "/rest/suin",
            data: JSON.stringify(suinVO),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result);
                if (result) {
                    alert("완료되었습니다");
                    getList();
                } else {
                    alert("입력에 실패했습니다");
                }
            },
            error: function (xhr, status, error) {
                console.log("code: " + xhr.status);
                console.log("message: " + xhr.responseText);
                console.log("error: " + xhr.error);
            },
        });
    });

    $modBtn.on("click", function () {
        let suinVO = {
            suinName: $suinName.val(),
            $suinContent: $suinContent.val(),
            $suinFile: $suinFile.val()
        };
        console.log("suinVO: ", suinVO);

        $.ajax({
            type: "put",
            url: "/rest/suin",
            data: JSON.stringify(suinVO),
            contentType: "application/json;charset=utf-8",
            dataType: "text",
            success: function (result) {
                console.log(result);
                if (result) {
                    alert("완료되었습니다");
                    getList();
                } else {
                    alert("입력에 실패했습니다");
                }
            },
            error: function (xhr, status, error) {
                console.log("code: " + xhr.status);
                console.log("message: " + xhr.responseText);
                console.log("error: " + xhr.error);
            },
        });
    });

    $delBtn.on("click", function () {
        $.ajax({
            type: "delete",
            url: `/rest/suin/${$suinNum.val()}`,
            dataType: "text",
            success: function (result) {
                if (result) {
                    console.log(result);
                    getList();
                } else {
                    alert("없는 번호입니다.");
                }
            },
            error: function (xhr, status, error) {
                console.log("code: " + xhr.status);
                console.log("message: " + xhr.responseText);
                console.log("error: " + xhr.error);
            },
        });
    });

    function getList() {
        $.ajax({
            url: "/rest/suin",
            type: "get",
            dataType: "text",
            success: function (result) {
                result = JSON.parse(result);
                console.log(result);
                result.sort(function (b, a) {
                    return a.suinNum - b.suinNum;
                });

                let tblStr = `<table border=1><tr><th>번호</th><th>이름</th><th>내용</th><th>파일</th><th>다운로드</th></tr>`
                for (let i = 0; i < result.length; i++) {
                    tblStr += `<tr>
                            <td>${result[i].suinNum}</td>
                            <td>${result[i].suinName}</td>
                            <td>${result[i].suinContent}</td>`
                    tblStr += `<td><a href='${result[i].suinFile}'>보기</a></td>
                            <td><button onclick=fDownload('${result[i].suinFile}')>다운로드</button></td>
                            </tr>`;
                }
                tblStr += `</table>`;
                $list.html(tblStr);
            },
            error: function (xhr, status, error) {
                console.log("code: " + xhr.status);
                console.log("message: " + xhr.responseText);
                console.log("error: " + xhr.error);
            },
        });
    };

    function fDownload(urlPath) {
        let startIndex = urlPath.lastIndexOf("/") + 1;
        let originalName = urlPath.substring(startIndex);

        let aTag = document.createElement("a"); // a 태그 생성
        aTag.href = urlPath;
        aTag.download = originalName; // 클릭시 다운로드가 되도록 download 속성 추가

        aTag.click(); // 강제 클릭 발생시킴
    }

</script>
</body>
</html>