<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bookInfo">
   <!-- 1-1) 도서 정보 등록 BookInfoVO(author=개똥이, bookId="ISBN1234, ....) -->
   <!-- insert/update/delete 태그의 경우 resultType은 생략 트랜잭션 : 데이터베이스를 변경하기 위해 수행되어야 
      할 논리적 단위. 여러개의 sql로 구성됨 -->
   <insert id="addBookPost" parameterType="bookInfoVO">
      INSERT INTO
      BOOK_INFO(BOOK_ID, NAME, UNIT_PRICE, AUTHOR, DESCRIPTION, PUBLISHER,
      CATEGORY, UNITS_IN_STOCK, TOTAL_PAGES, RELEASE_DATE, CONDITION)
      VALUES(#{bookId},#{name},#{unitPrice},#{author},#{description},#{publisher},#{category},
      #{unitsInStock},#{totalPages},#{releaseDate},#{condition})
   </insert>

   <!-- 1-2) 첨부파일 등록 -->
   <insert id="addAttach" parameterType="attachVO">
      <selectKey resultType="int" order="BEFORE" keyProperty="seq">
         SELECT NVL(MAX(SEQ),0) + 1 FROM ATTACH
      </selectKey>
      INSERT INTO ATTACH(SEQ, BOOK_ID, FILENAME)
      VALUES(#{seq}, #{bookId},
      #{filename})
   </insert>

   <!-- 도서코드 자동생성 -->
   <select id="getBookId" resultType="String">
      SELECT
         SUBSTR(NVL(MAX(BOOK_ID), 'ISBN1234'),1,4) ||
         TRIM((SUBSTR(NVL(MAX(BOOK_ID), 'ISBN1234'),5) + 1))
      FROM BOOK_INFO
   </select>

   <resultMap type="bookInfoVO" id="bookInfoMap">
      <result property="rnum" column="RNUM" />
      <result property="bookId" column="BOOK_ID" />
      <result property="name" column="NAME" />
      <result property="unitPrice" column="UNIT_PRICE" />
      <result property="author" column="AUTHOR" />
      <result property="description" column="DESCRIPTION" />
      <result property="publisher" column="PUBLISHER" />
      <result property="category" column="CATEGORY" />
      <result property="unitsInStock" column="UNITS_IN_STOCK" />
      <result property="totalPages" column="TOTAL_PAGES" />
      <result property="releaseDate" column="RELEASE_DATE" />
      <result property="condition" column="CONDITION" />
      <collection property="attachVOList" resultMap="attachMap"></collection>
   </resultMap>
   
   <resultMap type="attachVO" id="attachMap">
      <result property="seq" column="SEQ" />
      <result property="bookId" column="BOOK_ID" />
      <result property="filename" column="FILENAME" />
   </resultMap>

   <!-- 도서 목록 관계차수 => BOOK_INFO : ATTACH = 1 : N
   map : {"currentPage":3,"size":10}
    -->
   <select id="listBook" parameterType="hashMap" resultMap="bookInfoMap">
	   <![CDATA[
		WITH U AS(
			SELECT ROW_NUMBER() OVER(ORDER BY T.BOOK_ID DESC) RNUM
			      ,T.*
			FROM
			(
			    SELECT
			        A.BOOK_ID, A.NAME, A.UNIT_PRICE, A.AUTHOR, 
			        SUBSTR(A.DESCRIPTION,1,7) || '..<p>' DESCRIPTION,
			        A.PUBLISHER, A.CATEGORY, A.UNITS_IN_STOCK, A.TOTAL_PAGES,
			        A.RELEASE_DATE, A.CONDITION,
			        B.SEQ, B.FILENAME
			    FROM BOOK_INFO A LEFT OUTER JOIN ATTACH B
			    ON(A.BOOK_ID = B.BOOK_ID)
			    ) T
			)
			SELECT U.*
			FROM U
			WHERE U.RNUM BETWEEN (#{currentPage} * #{size})-(#{size}-1) AND (#{currentPage} * #{size})
      		]]>
   </select>
   
   <!-- BOOK_INFO 테이블의 전체 행 수 -->
   <select id="getBookInfoTotal" resultType="int">
		SELECT COUNT(*) FROM BOOK_INFO
   </select>   
</mapper>




